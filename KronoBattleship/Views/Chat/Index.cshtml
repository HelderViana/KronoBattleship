@model IEnumerable<KronoBattleship.Models.UserViewModel>
@{
    ViewBag.Title = "Chat";
}

<script>
    var jsonUsers = @Html.Raw(Json.Encode(Model));
    console.log(jsonUsers)
</script>
<h2>Chat</h2>
<div class="row">
    <div class="col-md-3">
        <div class="people-list" id="people-list">
            <!--<div class="search">
              <input type="text" placeholder="search" />
              <i class="fa fa-search"></i>
            </div>-->
            <!-- User list -->
            @{ Html.RenderPartial("_UserList", Model);  }
            <!-- end user list -->

        </div>
    </div>
    <div class="col-md-9">
        <!-- Chat -->
        <div class="chat">
            <div class="chat-header clearfix">
                <div class="chat-about">
                    <div class="chat-with">Public Chat</div>
                </div>
                <i class="fa fa-star"></i>
            </div> <!-- end chat-header -->
            <div class="chat-history">
                <ul id="chat-body"></ul>
            </div>
            <div class="chat-message clearfix">
                <div class="write-form">
                    <textarea id="public-message" placeholder="Type your message" rows="2"></textarea>
                    <span id="send-public" class="send">Send</span>
                </div>
            </div> <!-- end chat-message -->
        </div> <!-- end chat -->
        <!-- end chat -->
    </div>
</div>


<!-- Modal -->
<div id="challengeToBattleModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Battle</h4>
                <p><span id="modalChallenger"></span> has challenged you to a duel</p>
                <button type="button" class="btn btn-default" onclick="battleAnswer(true)" data-dismiss="modal">Accept</button>
                <button type="button" class="btn btn-default" onclick="battleAnswer(false)" data-dismiss="modal">Reject</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div id="waitModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Waiting</h4>
                <p>battle ?</p>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

@section scripts {
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    @* TODO if problems add ~/ to signalr *@
    <script src="~/signalr/hubs"></script>
    <script type="text/javascript" src="~/Scripts/handlebars.min.js"></script>
    <script id="player-template" type="text/x-handlebars-template">
        <li>
            <div class="message-data">
                <span class="message-data-name"><i class="fa fa-circle online"></i> {{UserName}}</span>
                <span class="message-data-time">{{Time}}</span>
            </div>
            <div class="message my-message">
                {{Message}}
            </div>
        </li>
    </script>
    <script id="other-players-template" type="text/x-handlebars-template">
        <li class="clearfix">
            <div class="message-data align-right">
                <span class="message-data-time">{{Time}}</span> &nbsp; &nbsp;
                <span class="message-data-name">{{UserName}}  <i class="fa fa-circle me"></i></span>
            </div>
            <div class="message other-message float-right">
                {{Message}}
            </div>
        </li>
    </script>
    <script type="text/javascript">
        "use strict";
        var currentUser = "@ViewBag.CurrentUser.UserName";
        console.log(currentUser);
        var templateUser = Handlebars.compile($("#player-template").html());
        var templateOther = Handlebars.compile($("#other-players-template").html());
        
        var challengeToFight  = function(enemy){
            console.log("fight", enemy);
            connectionStatus.server.battlePrompt(enemy, currentUser);
        };


        //$(function () {
        // declare a proxy to reference hub
        var connectionStatus = $.connection.connectionHub;
        var chat = $.connection.chatHub;

        connectionStatus.client.login = function (id) {
            setOnline(id);
        }
        connectionStatus.client.logout = function (id) {
            setOffline(id);
        }

        connectionStatus.client.displayOnline = function (list) {
            for (var i in list) {
                setOnline(list[i]);
            }
        }

        chat.client.broadcastMessage = function (username, message) {
            var date = new Date();
            var data = {UserName: username,Time: date.toLocaleTimeString() ,Message: message}
            var  template = currentUser == username ? templateUser(data) :  templateOther(data);
            $("#chat-body").append(template);
            var chat = $(".chat-history");
            chat.scrollTop(chat[0].scrollHeight);
        };

        // called button to start fight
        //challengeToFight

        connectionStatus.client.displayPrompt= function(player){
            //var answer = prompt(text, "");
            // TODO set the started player in the modal 
            $("#modalChallenger").text(player);
            $("#challengeToBattleModal").modal(
                {backdrop: 'static',
                    keyboard: false,
                    show: true,
                });
        }

        var battleAnswer = function(answer){
            var player =  $("#modalChallenger").text();
            connectionStatus.server.battleAnswer(player, answer);
            if(answer)
                redirect("/Battle/Create", "POST",  { user1: currentUser, user2: player});
        }

        connectionStatus.client.answer = function(enemy, answer){
            if(answer){
                //alert("accept " + enemy + answer);
                redirect("/Battle/Create",  "POST",  { user1: currentUser, user2: enemy});
            }else {
                alert("reject " + enemy + answer);
            };
        }

        $.connection.hub.start().done(function () {

            //$('[id*="battle-btn-"]').click(console.log(this.id));
            //$(".startBattle").click(console.log(this.data.userId));

            //sender.server.setOnline($("#name").val());
            $("#public-message").keypress(function (e) {
                if (e.keyCode ===13) {
                    chat.server.send(currentUser, $('#public-message').val());
                    $('#public-message').val("");
                }
            });
            $("#send-public").click(function () {
                chat.server.send(currentUser, $('#public-message').val());
                $('#public-message').val("");
            });
        });
        // });


    </script>

}